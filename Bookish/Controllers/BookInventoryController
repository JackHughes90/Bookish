using System.Diagnostics;
using Microsoft.AspNetCore.Mvc;
using Bookish.Models;
using Bookish.Models.Requests;
using Microsoft.EntityFrameworkCore;
using Bookish;

namespace Inventory.Controllers;

public class BookInventoryController : Controller
{
    private readonly ILogger<BookInventoryController> _logger;

    public BookInventoryController(ILogger<BookInventoryController> logger)
    {
        _logger = logger;
    }

    public IActionResult Index()
    {
        var context = new BookishContext();
        Book book = context.Book
            .Include(b => b.Authors) // do we need that?
            .Include(b => b.Genres) // do we need that?
            .ToList();

        return View(book);
    }

    [HttpPost("")]
    public IActionResult addCopy([FromForm] BookInventory newBookCopy)
    {
        var context = new BookishContext();// all the database jazz

        // Make new authors (quick and dirty - will duplicate authors of same name)
        BookInventory newBookCopy = new BookInventory
        {
            Title = newBookCopy.Title
        };

        var addedEntity = context.Books.Add(newBookCopy);

        context.SaveChanges();

        Book addedBook = addedEntity.Entity;

        return RedirectToAction("Index");
    }

    [HttpGet("addCopy")]
    public IActionResult BookCopyForm()
    {
        return View();
    }
    
}
